<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SNACK STORM</title>
    <link rel="stylesheet" href="/style/adminusers.css">
    <link rel="shortcut icon" href="/images/favicon.png" type="">
    <link rel="stylesheet" href="/style/adminorder.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <main class="ml-64 p-8">
        <!-- Page Header -->
        <div class="page-header">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Order Management</h1>
                <p class="text-gray-500">Track and manage customer orders</p>
            </div>

            <div class="search-bar">
                <svg class="search-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                <input type="text" placeholder="Search orders..." class="search-input">
            </div>
        </div>

        <!-- Orders Table -->
        <div class="users-table">
            <table class="w-full">
                <thead>
                    <tr>
                        <th>Order Date</th>
                        <th>Order ID</th>
                        <th>Products</th>
                        <th>Quantity</th>
                        <th>Total Amount</th>
                        <th>Payment Method</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach((order) => { %>
                        <tr>
                            <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                            <td><%= order._id %></td>
                            <td class="truncate max-w-xs">
                                <%= order.products
                                    .filter(p => p.status !== 'Cancelled')
                                    .map(p => p.productName)
                                    .join(', ') %>
                            </td>
                            <td>
                                <%= order.products
                                    .filter(p => p.status !== 'Cancelled')
                                    .reduce((total, p) => total + p.quantity, 0) %>
                            </td>
                            <td>
                                <% 
                                const subtotal = order.products
                                    .filter(p => p.status !== 'Cancelled')
                                    .reduce((total, p) => total + (p.price * p.quantity), 0);
                                const shippingCharge = 5;
                                const taxRate = 0.1;
                                const tax = subtotal * taxRate;
                                const totalAmount = subtotal + shippingCharge + tax;
                            %> 
                            â‚¹<%= totalAmount.toFixed(2) %>
                            </td>
                            <td><%= order.paymentMethod %></td>
                            <td>
                                <% 
                                const areAllProductsCancelled = order.products.every(product => product.status === 'Cancelled');
                                const areAllProductsDelivered = order.products.every(product => product.status === 'Delivered');
                                %>
                                
                                <% if (areAllProductsCancelled) { %>
                                    <span class="status-text" style="color: red; font-weight: bold;">Cancelled</span>
                                <% } else if (areAllProductsDelivered) { %>
                                    <span class="status-text" style="color: green; font-weight: bold;">Delivered</span>
                                <% } else { %>
                                    <select class="status-dropdown" data-order-id="<%= order._id %>" onchange="updateProductStatus(this)">
                                        <% ['Pending', 'Processing', 'Shipped', 'Delivered','Cancelled'].forEach(status => { %>
                                            <option value="<%= status %>" <%= order.products.some(p => p.status === status) ? 'selected' : '' %>><%= status %></option>
                                        <% }); %>
                                    </select>
                                <% } %>
                            </td>
                            <td>
                                <button onclick="window.location.href='/admin/vieworderdetils?id=<%= order._id %>'"
                                    class="view-button"
                                    style="background-color: #2196F3; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">
                                    View Details
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="page-button">Previous</a>
            <% } %>
        
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="page-button <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
            <% } %>
        
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>" class="page-button">Next</a>
            <% } %>
        </div>
    </main>



    <!-- Sidebar (same as your product page) -->
    <aside class="sidebar">
        <div class="sidebar-header">
            <a href="#" class="sidebar-logo">Admin Panel</a>
        </div>
        <nav>
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/admin/dashboard" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                        </svg>
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/users" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                        Users
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/products" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                        </svg>
                        Products
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/order" class="nav-link active">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                        </svg>
                        Orders
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/category" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                        </svg>
                        Categories
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
                        </svg>
                        Coupons
                    </a>
                </li>
            </ul>

            <!-- Bottom Menu -->
            <ul class="bottom-menu">
                <li class="nav-item">
                    <a href="#" class="nav-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        Settings
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/logout" class="nav-link logout-link">
                        <svg class="nav-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                        </svg>
                        Logout
                    </a>
                </li>
            </ul>
        </nav>
    </aside>

    <script>
     document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".status-dropdown").forEach(dropdown => {
        dropdown.addEventListener("change", function () {
            const orderId = this.getAttribute("data-order-id");
            const newStatus = this.value;

            fetch(`api/orders/${orderId}/product-status`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ status: newStatus }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Success!",
                        text: "Product statuses updated successfully!",
                        confirmButtonColor: "#3085d6",
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Failed to update product statuses.",
                    });
                }
            })
            .catch(error => {
                console.error("Error updating product statuses:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred while updating product statuses.",
                });
            });
        });
    });
});


    </script>
        
    </body>
</html>