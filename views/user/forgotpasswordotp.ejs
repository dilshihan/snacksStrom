<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification - SNACK STORM </title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #fcf3e3;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-image: url("/api/placeholder/800/600");
            background-size: cover;
            background-position: center;
        }

        .burger-container {
            width: 100%;
            max-width: 450px;
            position: relative;
        }

        .bun-top {
            height: 120px;
            background-color: #FFB847;
            border-radius: 150px 150px 20px 20px;
            position: relative;
            z-index: 10;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .bun-top:after {
            content: "";
            position: absolute;
            top: 25px;
            left: 50%;
            transform: translateX(-50%);
            width: 80%;
            height: 10px;
            background-color: #E89B32;
            border-radius: 10px;
            box-shadow: 0 25px 0 #E89B32, 0 50px 0 #E89B32;
        }

        .sesame {
            position: absolute;
            top: 15px;
            left: 0;
            width: 100%;
            height: 20px;
            display: flex;
            justify-content: space-around;
        }

        .sesame span {
            width: 12px;
            height: 20px;
            background-color: #FFF0C8;
            border-radius: 50%;
            transform: rotate(15deg);
        }

        .lettuce {
            height: 35px;
            background-color: #5DC356;
            border-radius: 5px 5px 15px 15px;
            margin-top: -10px;
            position: relative;
            z-index: 8;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .lettuce:before {
            content: "";
            position: absolute;
            bottom: -5px;
            left: 10px;
            right: 10px;
            height: 15px;
            background-color: #4DAF47;
            border-radius: 5px 5px 15px 15px;
        }

        .content-patty {
            background-color: white;
            border-radius: 20px;
            padding: 30px;
            margin-top: -10px;
            position: relative;
            z-index: 7;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .cheese {
            height: 25px;
            background-color: #FFD83A;
            border-radius: 10px 10px 5px 5px;
            margin-top: -10px;
            position: relative;
            z-index: 6;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .cheese:before {
            content: "";
            position: absolute;
            top: 5px;
            left: -10px;
            width: 30px;
            height: 20px;
            background-color: #FFD83A;
            border-radius: 10px;
        }

        .cheese:after {
            content: "";
            position: absolute;
            top: 5px;
            right: -15px;
            width: 40px;
            height: 20px;
            background-color: #FFD83A;
            border-radius: 10px;
        }

        .bun-bottom {
            height: 60px;
            background-color: #FFB847;
            border-radius: 20px 20px 100px 100px;
            margin-top: -10px;
            position: relative;
            z-index: 5;
            box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        }

        h1 {
            color: #FF7043;
            margin-top: 0;
            font-size: 28px;
            text-align: center;
        }

        p {
            color: #555;
            margin-bottom: 25px;
            text-align: center;
        }

        .email-display {
            text-align: center;
            background-color: #FFF8E7;
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-weight: bold;
            color: #FF7043;
        }

        .otp-inputs {
            display: flex;
            justify-content: space-between;
            margin-bottom: 25px;
        }

        .otp-input {
            width: 50px;
            height: 60px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            border: 2px dashed #FF7043;
            border-radius: 12px;
            background-color: #FFF8E7;
            margin: 0 5px;
            outline: none;
            transition: all 0.3s;
        }

        .otp-input:focus {
            border: 2px solid #FF7043;
            box-shadow: 0 0 10px rgba(255, 112, 67, 0.3);
            background-color: white;
        }

        .timer {
            text-align: center;
            margin-bottom: 20px;
            color: #FF7043;
            font-weight: bold;
        }

        .submit-btn {
            background-color: #FF7043;
            color: white;
            border: none;
            border-radius: 12px;
            padding: 15px;
            font-size: 18px;
            font-weight: bold;
            width: 100%;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 5px 15px rgba(255, 112, 67, 0.3);
            margin-bottom: 15px;
        }

        .submit-btn:hover {
            background-color: #E5603B;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(255, 112, 67, 0.4);
        }

        .submit-btn:active {
            transform: translateY(1px);
        }

        .resend-link {
            text-align: center;
            color: #FF7043;
            text-decoration: none;
            display: block;
            font-weight: bold;
        }

        .resend-link:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="burger-container">
        <div class="bun-top">
            <div class="sesame">
                <span></span><span></span><span></span><span></span><span></span><span></span><span></span>
            </div>
        </div>
        <div class="lettuce"></div>
        <div class="content-patty">
            <h1>Verify OTP</h1>
            <p>We've sent a verification code to your email</p>
            
            <div class="email-display"><%= email %></div>
            
            <div class="otp-inputs">
                <input type="text" class="otp-input" maxlength="1" autofocus>
                <input type="text" class="otp-input" maxlength="1">
                <input type="text" class="otp-input" maxlength="1">
                <input type="text" class="otp-input" maxlength="1">
                <input type="text" class="otp-input" maxlength="1">
                <input type="text" class="otp-input" maxlength="1">
            </div>
            
            <div class="timer">Time remaining: <span id="countdown">01:00</span></div>
            
            <button class="submit-btn">Verify OTP</button>
            
            <a href="#" class="resend-link">Resend OTP</a>
        </div>
        <div class="cheese"></div>
        <div class="bun-bottom"></div>
    </div>

    <script>
       // Auto-move to next input and restrict non-numeric input
       const otpInputs = document.querySelectorAll('.otp-input');

otpInputs.forEach((input, index) => {
    input.addEventListener('input', (e) => {
        if (!/^\d$/.test(e.data)) { // Restrict non-numeric input
            input.value = "";
            return;
        }

        if (index < otpInputs.length - 1 && input.value !== "") {
            otpInputs[index + 1].focus();
        }
    });

    input.addEventListener('keydown', (e) => {
        if (e.key === 'Backspace' && index > 0 && !input.value) {
            otpInputs[index - 1].focus();
        }
    });
});

// Countdown timer
let timeLeft = 60; 
const countdownEl = document.getElementById('countdown');
const resendLink = document.querySelector('.resend-link');

// Disable resend link initially
resendLink.style.pointerEvents = 'none';
resendLink.style.opacity = '0.5';

const countdownTimer = setInterval(() => {
    const minutes = Math.floor(timeLeft / 60);
    let seconds = timeLeft % 60;
    seconds = seconds < 10 ? '0' + seconds : seconds;

    countdownEl.textContent = `${minutes}:${seconds}`;

    if (timeLeft <= 0) {
        clearInterval(countdownTimer);
        countdownEl.textContent = '0:00';
        resendLink.style.pointerEvents = 'auto';
        resendLink.style.opacity = '1';
    }

    timeLeft--;
}, 1000);

// Verify OTP button
document.querySelector('.submit-btn').addEventListener('click', async function() {
    let otp = '';
    otpInputs.forEach(input => otp += input.value);

    if (otp.length === 6) {
        try {
            const email = new URLSearchParams(window.location.search).get('email');

            const response = await fetch('/user/verify-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email, otp })
            });

            const data = await response.json();

            Swal.fire({
                icon: data.success ? 'success' : 'error',
                title: data.success ? 'Success' : 'Error',
                text: data.message
            }).then(() => {
                if (data.success) {
                    window.location.href = "/user/newpassword?email=" + encodeURIComponent(email); ;
                }
            });

        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong'
            });
        }
    } else {
        Swal.fire({
            icon: 'warning',
            title: 'Incomplete OTP',
            text: 'Please enter the complete 6-digit OTP'
        });
    }
});

// Resend OTP link
resendLink.addEventListener('click', async function(e) {
    e.preventDefault();

    const email = new URLSearchParams(window.location.search).get('email');
    if (!email) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Request',
            text: 'Please go back and try again.'
        });
        return;
    }

    try {
        const response = await fetch('/user/send-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email })
        });

        const data = await response.json();

        Swal.fire({
            icon: data.message === "OTP sent successfully" ? 'success' : 'error',
            title: data.message === "OTP sent successfully" ? 'Success' : 'Error',
            text: data.message
        }).then(() => {
            if (data.message === "OTP sent successfully") {
                timeLeft = 60; // Reset timer

                otpInputs.forEach(input => (input.value = ""));
                otpInputs[0].focus();

                resendLink.style.pointerEvents = 'none';
                resendLink.style.opacity = '0.5';

                clearInterval(countdownTimer);
                setInterval(() => {
                    const minutes = Math.floor(timeLeft / 60);
                    let seconds = timeLeft % 60;
                    seconds = seconds < 10 ? '0' + seconds : seconds;

                    countdownEl.textContent = `${minutes}:${seconds}`;

                    if (timeLeft <= 0) {
                        clearInterval(countdownTimer);
                        countdownEl.textContent = '0:00';
                        resendLink.style.pointerEvents = 'auto';
                        resendLink.style.opacity = '1';
                    }

                    timeLeft--;
                }, 1000);
            }
        });

    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong while resending OTP'
        });
    }
});


    </script>
</body>
</html>